// <auto-generated />
using System;
using AppsDevCoffee.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppsDevCoffee.Migrations
{
    [DbContext(typeof(CoffeeAppContext))]
    [Migration("20240410132619_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppsDevCoffee.Models.CurrentInventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateLastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("OriginTypeId")
                        .HasColumnType("int");

                    b.Property<int>("OzQuantity")
                        .HasColumnType("int");

                    b.Property<float>("PerOzPrice")
                        .HasColumnType("real");

                    b.Property<int>("RoastId")
                        .HasColumnType("int");

                    b.Property<int>("TierTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OriginTypeId");

                    b.HasIndex("RoastId");

                    b.ToTable("CurrentInventories");
                });

            modelBuilder.Entity("AppsDevCoffee.Models.InventoryLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateLastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("OriginTypeId")
                        .HasColumnType("int");

                    b.Property<int>("OzQuantity")
                        .HasColumnType("int");

                    b.Property<float>("PerOzPrice")
                        .HasColumnType("real");

                    b.Property<int>("RoastId")
                        .HasColumnType("int");

                    b.Property<int>("TierTypeId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OriginTypeId");

                    b.HasIndex("RoastId");

                    b.ToTable("InventoryLogs");
                });

            modelBuilder.Entity("AppsDevCoffee.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PaidDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("PriceAdjustment")
                        .HasColumnType("real");

                    b.Property<float>("SubtotalCost")
                        .HasColumnType("real");

                    b.Property<float>("TotalCost")
                        .HasColumnType("real");

                    b.Property<float>("TotalPaid")
                        .HasColumnType("real");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("AppsDevCoffee.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("CostPerOz")
                        .HasColumnType("real");

                    b.Property<int>("CurrentInventoryId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<float>("OzQuantity")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CurrentInventoryId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("AppsDevCoffee.Models.OriginType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoasterNotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierNotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OriginTypes");
                });

            modelBuilder.Entity("AppsDevCoffee.Models.Roast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("CoolAt")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("FirstCrackTime")
                        .HasColumnType("time");

                    b.Property<float>("GreenWeightOz")
                        .HasColumnType("real");

                    b.Property<int>("RoastTypeId")
                        .HasColumnType("int");

                    b.Property<float>("RoastedWeightOz")
                        .HasColumnType("real");

                    b.Property<TimeSpan>("SecondCrackTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TotalRoastTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Roasts");
                });

            modelBuilder.Entity("AppsDevCoffee.Models.RoastType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Active")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoastTypes");
                });

            modelBuilder.Entity("AppsDevCoffee.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hashed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserTypeId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateAdded = new DateTime(2024, 4, 10, 8, 26, 17, 531, DateTimeKind.Local).AddTicks(6838),
                            Email = "admin@example.com",
                            FirstName = "Admin",
                            Hashed = "PassPass1!",
                            LastName = "User",
                            UserStatus = "Active",
                            UserTypeId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            DateAdded = new DateTime(2024, 4, 10, 8, 26, 17, 531, DateTimeKind.Local).AddTicks(6886),
                            Email = "john@example.com",
                            FirstName = "JohnTest",
                            Hashed = "PassPass1!",
                            LastName = "Doe",
                            UserStatus = "Active",
                            UserTypeId = 2,
                            Username = "john"
                        },
                        new
                        {
                            Id = 3,
                            DateAdded = new DateTime(2024, 4, 10, 8, 26, 17, 531, DateTimeKind.Local).AddTicks(6889),
                            Email = "jane@example.com",
                            FirstName = "JaneTest",
                            Hashed = "PassPass1!",
                            LastName = "Doe",
                            UserStatus = "Active",
                            UserTypeId = 3,
                            Username = "jane"
                        });
                });

            modelBuilder.Entity("AppsDevCoffee.Models.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Active")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = 0,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Active = 0,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Employee"
                        },
                        new
                        {
                            Id = 3,
                            Active = 0,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "User"
                        });
                });

            modelBuilder.Entity("AppsDevCoffee.Models.CurrentInventory", b =>
                {
                    b.HasOne("AppsDevCoffee.Models.OriginType", "OriginType")
                        .WithMany()
                        .HasForeignKey("OriginTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppsDevCoffee.Models.Roast", "Roast")
                        .WithMany()
                        .HasForeignKey("RoastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OriginType");

                    b.Navigation("Roast");
                });

            modelBuilder.Entity("AppsDevCoffee.Models.InventoryLog", b =>
                {
                    b.HasOne("AppsDevCoffee.Models.OriginType", "OriginType")
                        .WithMany()
                        .HasForeignKey("OriginTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppsDevCoffee.Models.Roast", "Roast")
                        .WithMany()
                        .HasForeignKey("RoastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OriginType");

                    b.Navigation("Roast");
                });

            modelBuilder.Entity("AppsDevCoffee.Models.Order", b =>
                {
                    b.HasOne("AppsDevCoffee.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AppsDevCoffee.Models.OrderItem", b =>
                {
                    b.HasOne("AppsDevCoffee.Models.CurrentInventory", "CurrentInventory")
                        .WithMany()
                        .HasForeignKey("CurrentInventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppsDevCoffee.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentInventory");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("AppsDevCoffee.Models.User", b =>
                {
                    b.HasOne("AppsDevCoffee.Models.UserType", "UserType")
                        .WithMany()
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("AppsDevCoffee.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("AppsDevCoffee.Models.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
